#this output generates a nginx ban list
#it also keeps a historical record in an elasticsearch index (yay! using es as a datastore! [This can be bad, just ask any es employee...] but I assume this data can be considered relatively ephemeral )
#the record in es will have the ip, epoch time ban was created, ban length, module name, and comment. 
#this way we take care of creating and expiring bans in nginx. 



use Geo::IP::PurePerl;
use List::MoreUtils 'any';
use warnings;


my $facetedData;
#you need to use the MaxMind GeoIP Organization Database. TODO: Migrate away from this?
my $geoOrgDatabase="/var/lib/GeoIP/GeoIPOrg.dat";
my $crawlers="microsoft|yandex|yahoo|google";
my $result2;
my $high = 5;
my $low = 4;



sub nginx_ban_output {
    debugOutput("\n**DEBUG: Running nginx_ban_output\n");
    my @denyArray;
    debugOutput("**DEBUG: Attempting to get current nginxban.conf");
    #$curlOutput = `curl -s http:/foo.host.lan/packages/centos/nginx/conf/sysban/blockips.conf -o /tmp/blockips.conf; echo $?`;
    #if we couldnt, give an error
    if ( $curlOutput != 0 ){
	print "\n\nError: could not fetch blockips.conf, trying to work around this... curl exit code: $curlOutput";
	
    }
    else {
	#read the denyfile into an array
	debugOutput("**DEBUG: Was able to get blockips.conf. Reading the file into an array");
	open DENYFILE, "/tmp/nginxban.conf";
	@denyArray = <DENYFILE>;
    }


}
